{"ast":null,"code":"var _jsxFileName = \"/Users/skkim/git/study/cycle-1/react-tutorial/src/Pages/HooksState/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Name from './Name';\nimport getTestData from '../../mock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Example() {\n  _s();\n\n  console.log(\"랜더링\"); // \"count\"라는 새 상태 변수를 선언합니다\n\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState('');\n  const [data, setData] = useState(null);\n  const [users, setUsers] = useState([{\n    name: \"김성광\",\n    acite: true\n  }, {\n    name: \"aaaa\",\n    acite: false\n  }, {\n    name: \"bbbb\",\n    acite: false\n  }]); // useEffect(async () => {\n  //   const response = await getTestData(count);\n  //   setData(response);\n  // }, [count])\n\n  const handleIncrementClick = useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"id: \", data === null || data === void 0 ? void 0 : data.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"count: \", data === null || data === void 0 ? void 0 : data.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncrementClick,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Name, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Example, \"n3vi9x1NTpZmEXgXE7UBMdDP164=\");\n\n_c = Example;\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["/Users/skkim/git/study/cycle-1/react-tutorial/src/Pages/HooksState/index.js"],"names":["React","useEffect","useState","useCallback","Name","getTestData","Example","console","log","count","setCount","name","setName","data","setData","users","setUsers","acite","handleIncrementClick","handleNameChange","event","target","value","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,YAAxB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADiB,CAEjB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CACjC;AACES,IAAAA,IAAI,EAAE,KADR;AAEEM,IAAAA,KAAK,EAAE;AAFT,GADiC,EAKjC;AACEN,IAAAA,IAAI,EAAE,MADR;AAEEM,IAAAA,KAAK,EAAE;AAFT,GALiC,EASjC;AACEN,IAAAA,IAAI,EAAE,MADR;AAEEM,IAAAA,KAAK,EAAE;AAFT,GATiC,CAAD,CAAlC,CANiB,CAqBjB;AACA;AACA;AACA;;AAEA,QAAMC,oBAAoB,GAAGf,WAAW,CAAC,MAAM;AAC7CO,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFuC,EAErC,CAACA,KAAD,CAFqC,CAAxC;;AAIA,QAAMU,gBAAgB,GAAIC,KAAD,IAAW;AAClCR,IAAAA,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAKA,sBACE;AAAA,4BACE;AAAA,iCAAgBb,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,yBAAQI,IAAR,aAAQA,IAAR,uBAAQA,IAAI,CAAEU,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,4BAAWV,IAAX,aAAWA,IAAX,uBAAWA,IAAI,CAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAES,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAER;AAAZ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA/CQL,O;;KAAAA,O;AAiDT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport Name from './Name';\nimport getTestData from '../../mock'\n\nfunction Example() {\n  console.log(\"랜더링\");\n  // \"count\"라는 새 상태 변수를 선언합니다\n  const [count, setCount] = useState(0);\n  const [name, setName] = useState('');\n  const [data, setData] = useState(null);\n  const [users, setUsers] = useState([\n    {\n      name: \"김성광\",\n      acite: true,\n    },\n    {\n      name: \"aaaa\",\n      acite: false,\n    },\n    {\n      name: \"bbbb\",\n      acite: false,\n    },\n  ]);\n\n  // useEffect(async () => {\n  //   const response = await getTestData(count);\n  //   setData(response);\n  // }, [count])\n\n  const handleIncrementClick = useCallback(() => {\n    setCount(count + 1);\n  }, [count])\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  }\n\n  \n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <p>id: {data?.id}</p>\n      <p>count: {data?.count}</p>\n      <button onClick={handleIncrementClick}>\n        Click me\n      </button>\n      <input type=\"text\" onChange={handleNameChange} />\n      <Name name={name}></Name>\n    </div>\n  );\n}\n\nexport default Example"]},"metadata":{},"sourceType":"module"}